# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Github Projects\ProgrammingHomework\GUI\FaceComparsion.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
sys.path.append('D:\Github Projects\ProgrammingHomework')
from PyQt5 import QtCore
import random
import cv2
from PyQt5 import QtWidgets
from PyQt5.QtCore import QThread
from PyQt5.QtGui import QImage

from PyQt5.QtGui import QPixmap
from algorithms.FaceComparsion import FaceComparsion


def getCameraNum():
    """获取摄像头数量"""
    num = 0
    for i in range(0,5) :
        # 从摄像头中取得视频
        cap = cv2.VideoCapture(i)
        if cap.isOpened():
            num+=1
        cap.release()
    return num

class FrameThread(QThread):
    imgLab = None
    device = None
    paizhao = 0
    img2=''
    """摄像头拍照线程，摄像头拍照耗时较长容易卡住UI"""
    def __init__(self,deviceIndex,imgLab):
        QThread.__init__(self)
        self.imgLab = imgLab
        self.deviceIndex = deviceIndex

        self.device = cv2.VideoCapture(self.deviceIndex)  # 从摄像头中取得视频
        self.device.set(cv2.CAP_PROP_FRAME_WIDTH, 1600)
        self.device.set(cv2.CAP_PROP_FRAME_HEIGHT, 1200)
        
    def ReturnPath(self):
        return self.img2

    def run(self):
        if self.device.isOpened():
            try:
                while True:
                    ret, frame = self.device.read()
                    height, width, bytesPerComponent = frame.shape
                    bytesPerLine = bytesPerComponent * width
                    # 变换彩色空间顺序
                    cv2.cvtColor(frame, cv2.COLOR_BGR2RGB, frame)
                    # 转为QImage对象
                    image = QImage(frame.data, width, height, bytesPerLine, QImage.Format_RGB888)
                    if self.paizhao == 1:
                        self.img2="D:\\img"+str(random.randint(0, 1000))+".jpg"
                        image.save(self.img2)
                        self.paizhao = 0
                    pixmap = QPixmap.fromImage(image)
                    pixmap = pixmap.scaled(self.imgLab.width(), self.imgLab.height(), QtCore.Qt.KeepAspectRatio)
                    self.imgLab.setPixmap(pixmap)
            except RuntimeError:
                self.device.release()    
            finally:
                self.device.release()
        # if self.cap.isOpened():
        #     # 获取视频播放界面长宽
        #     width = int(self.cap.get(cv2.CAP_PROP_FRAME_WIDTH) + 0.5)
        #     height = int(self.cap.get(cv2.CAP_PROP_FRAME_HEIGHT) + 0.5)
        #     # 定义编码器 创建 VideoWriter 对象
        #     while (self.cap.isOpened()):
        #         # 读取帧摄像头
        #         ret, frame = self.cap.read()
        #         image = QtGui.QImage(frame, width, height, QtGui.QImage.Format_Indexed8)
        #         pixmap = QtGui.QPixmap.fromImage(image.mirrored(False, True))
        #         # pixmap = QPixmap('C:\left.jpg')
        #         self.imgLab.setPixmap(pixmap)

    def destroyed(self, QObject=None):
        self.device.release()

class Ui_Dialog(object):
    img=''
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(562, 332)
        Dialog.setMinimumSize(QtCore.QSize(562, 332))
        Dialog.setMaximumSize(QtCore.QSize(562, 332))
        Dialog.setStyleSheet("font: 9pt \"黑体\";")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(210, 10, 151, 41))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(210, 280, 141, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(110, 280, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(40, 60, 221, 201))
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.gridLayoutWidget = QtWidgets.QWidget(Dialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(300, 60, 241, 201))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 0, 0, 1, 2)
        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(270, 60, 20, 201))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.pushButton_2.clicked.connect(self.paizhao)
        self.pushButton.clicked.connect(lambda: self.face(self.img))
        
        self.frameThread = FrameThread(0,self.label_2)
        self.frameThread.start()
        
        self.frameThread2 = FrameThread(1,self.label)
        self.frameThread2.start()

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        
        
    def paizhao(self):
        self.frameThread.paizhao = 1
        self.img=self.frameThread.ReturnPath()
        self.frameThread2.paizhao = 1
    
    
    def face(self,img):
        self.label_4.setText(FaceComparsion(img))


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt;\">人脸查询系统</span></p></body></html>"))
        self.pushButton.setText(_translate("Dialog", "比较图片"))
        self.pushButton_2.setText(_translate("Dialog", "选择照片"))
        self.label_2.setText(_translate("Dialog", "请选择照片"))
        self.label_4.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
